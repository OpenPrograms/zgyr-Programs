local gpu = require('component').gpu
local char = require('unicode').char
local W, H = gpu.getResolution()

LEM1802 = {
  id = 0x7349f615,
  version = 0x1802,
  manufacturer = 0x1c6c8b36,
  defaultFont = {
    0x000f, 0x0808, 0x080f, 0x0808, 0x08f8, 0x0808, 0x00ff, 0x0808, 
    0x0808, 0x0808, 0x08ff, 0x0808, 0x00ff, 0x1414, 0xff00, 0xff08,
    0x1f10, 0x1714, 0xfc04, 0xf414, 0x1710, 0x1714, 0xf404, 0xf414,
    0xff00, 0xf714, 0x1414, 0x1414, 0xf700, 0xf714, 0x1417, 0x1414,
    0x0f08, 0x0f08, 0x14f4, 0x1414, 0xf808, 0xf808, 0x0f08, 0x0f08,
    0x001f, 0x1414, 0x00fc, 0x1414, 0xf808, 0xf808, 0xff08, 0xff08,
    0x14ff, 0x1414, 0x080f, 0x0000, 0x00f8, 0x0808, 0xffff, 0xffff, 
    0xf0f0, 0xf0f0, 0xffff, 0x0000, 0x0000, 0xffff, 0x0f0f, 0x0f0f, 
    0x0000, 0x0000, 0x005f, 0x0000, 0x0300, 0x0300, 0x3e14, 0x3e00, 
    0x266b, 0x3200, 0x611c, 0x4300, 0x3629, 0x7650, 0x0002, 0x0100, 
    0x1c22, 0x4100, 0x4122, 0x1c00, 0x2a1c, 0x2a00, 0x083e, 0x0800, 
    0x4020, 0x0000, 0x0808, 0x0800, 0x0040, 0x0000, 0x601c, 0x0300, 
    0x3e41, 0x3e00, 0x427f, 0x4000, 0x6259, 0x4600, 0x2249, 0x3600, 
    0x0f08, 0x7f00, 0x2745, 0x3900, 0x3e49, 0x3200, 0x6119, 0x0700, 
    0x3649, 0x3600, 0x2649, 0x3e00, 0x0024, 0x0000, 0x4024, 0x0000, 
    0x0814, 0x2241, 0x1414, 0x1400, 0x4122, 0x1408, 0x0259, 0x0600, 
    0x3e59, 0x5e00, 0x7e09, 0x7e00, 0x7f49, 0x3600, 0x3e41, 0x2200, 
    0x7f41, 0x3e00, 0x7f49, 0x4100, 0x7f09, 0x0100, 0x3e49, 0x3a00, 
    0x7f08, 0x7f00, 0x417f, 0x4100, 0x2040, 0x3f00, 0x7f0c, 0x7300, 
    0x7f40, 0x4000, 0x7f06, 0x7f00, 0x7f01, 0x7e00, 0x3e41, 0x3e00, 
    0x7f09, 0x0600, 0x3e41, 0xbe00, 0x7f09, 0x7600, 0x2649, 0x3200, 
    0x017f, 0x0100, 0x7f40, 0x7f00, 0x1f60, 0x1f00, 0x7f30, 0x7f00, 
    0x7708, 0x7700, 0x0778, 0x0700, 0x7149, 0x4700, 0x007f, 0x4100, 
    0x031c, 0x6000, 0x0041, 0x7f00, 0x0201, 0x0200, 0x8080, 0x8000, 
    0x0001, 0x0200, 0x2454, 0x7800, 0x7f44, 0x3800, 0x3844, 0x2800, 
    0x3844, 0x7f00, 0x3854, 0x5800, 0x087e, 0x0900, 0x4854, 0x3c00, 
    0x7f04, 0x7800, 0x447d, 0x4000, 0x2040, 0x3d00, 0x7f10, 0x6c00, 
    0x417f, 0x4000, 0x7c18, 0x7c00, 0x7c04, 0x7800, 0x3844, 0x3800, 
    0x7c14, 0x0800, 0x0814, 0x7c00, 0x7c04, 0x0800, 0x4854, 0x2400, 
    0x043e, 0x4400, 0x3c40, 0x7c00, 0x1c60, 0x1c00, 0x7c30, 0x7c00, 
    0x6c10, 0x6c00, 0x4c50, 0x3c00, 0x6454, 0x4c00, 0x0836, 0x4100, 
    0x0077, 0x0000, 0x4136, 0x0800, 0x0201, 0x0201, 0x704c, 0x7000
  },
  defaultPalette = {
    0x000, 0x00a, 0x0a0, 0x0aa, 0xa00, 0xa0a, 0xa50, 0xaaa,
    0x555, 0x55f, 0x5f5, 0x5ff, 0xf55, 0xf5f, 0xff5, 0xfff
  },
  borderColor = 8,
  zoom = 2,
  memOffset = 0x8000,
  fontOffset = 0x8182, --0x8180,
  drawInterval = 0,
  refreshCount = 0,
  buffer = {}
}

LEM1802.init = function()
  gpu.setResolution(64, 24)
  for i = 1, #LEM1802.defaultFont do
    MEM[i + LEM1802.fontOffset] = LEM1802.defaultFont[i]
  end
  LEM1802.palette = LEM1802.defaultPalette
  for i = 0, 15 do
    --gpu.setPaletteColor(i, LEM1802.palette[i + 1])
  end
end

local function font2pix(c)
  if not LEM1802.buffer[c] then
    LEM1802.buffer[c] = {
      ((c >> 8) & 7) | ((c >> 5) & 64) | ((c & 7) << 3) | ((c & 8) << 4) | 0x2800,
      ((c >> 12) & 7) | ((c >> 9) & 64) | ((c >> 1) & 56) | (c & 128) | 0x2800
    }
  end
  return LEM1802.buffer[c]    
end

local actions = {
  [0] = function(B) -- MEM_MAP_SCREEN
    if B == 0 then
      gpu.setBackground(0)
      gpu.fill(1, 1, W, H, ' ')
    else
      LEM1802.memOffset = B
    end
  end,
  
  function(B) -- MEM_MAP_FONT
    if B == 0 then
      LEM1802.fontOffset = 0x8180
      for i = 0, #LEM1802.defaultFont - 1 do
        MEM[i + LEM1802.fontOffset] = LEM1802.defaultFont[i]
      end
    else
      LEM1802.fontOffset = B
    end
  end,
  
  function(B) -- MEM_MAP_PALETTE
    if B == 0 then
      LEM1802.palette = LEM1802.defaultPalette
    else
      for i = 0, 15 do
        LEM1802.palette[i] = RAM[B + i]
      end
    end
    for i = 0, 15 do
      gpu.setPaletteColor(i, LEM1802.palette[i])
    end
  end,
  
  function(B) -- SET_BORDER_COLOR
    LEM1802.borderColor = B & 0xF
  end,
  
  function(B) -- MEM_DUMP_FONT
    for i = 0, #LEM1802.defaultFont - 1 do
      MEM[i + B] = LEM1802.defaultFont[i]
    end
    -- DCPU-16.cycles = DCPU-16.cycles + 256
  end,
  
  function(B) -- MEM_DUMP_PALETTE
    for i = 0, 15 do
      MEM[i + B] = LEM1802.defaultPalette[i]
    end
    -- DCPU-16.cycles = DCPU-16.cycles + 16
  end,
}

LEM1802.interrupt = function()
  local A, B = REG.A, REG.B
  actions[A](B)
end

MEM = {}
for i = 0, 0xffff do
  MEM[i] = 0
end
LEM1802.init()

for i = 1, 128 do
  MEM[LEM1802.memOffset + i] = i
end

local function draw()
  local x, y = 1, 1
  for i = 1, 386 do
    local chr = MEM[i + LEM1802.memOffset]
    --gpu.setBackground(chr >> 8 & 15, true)
    --gpu.setForeground(chr >> 12, true)
    chr = chr & 127
    --chr = i
    local address = chr + LEM1802.fontOffset
    local a, b = MEM[address], MEM[address + 1]
    local c = font2pix(a)
    gpu.set(x, y, char(c[1]))
    gpu.set(x, y + 1, char(c[2]))
    c = font2pix(b)
    gpu.set(x + 1, y, char(c[1]))
    gpu.set(x + 1, y + 1, char(c[2]))
    x = x + 2
    if x > 63 then
      x = 1
      y = y + 2
    end
  end
end